hist(data$steps,breaks=50)
View(data)
dataByDate<-aggregate(steps ~ date, data, sum)
hist(dataByDate$steps,breaks=50)
summary(dataByDate)
dataByDate<-aggregate(steps ~ date, data, sum)
hist(dataByDate$steps)
summary(dataByDate)
dataByDate<-aggregate(steps ~ date, newDataNA, sum)
hist(dataByDate$steps)
summary(dataByDate)
data['type_of_day'] <- weekdays(as.Date(data$date))
View(data)
data['type_of_day'] <- weekday0(as.Date(data$date))
data['type_of_day'] <- wday(as.Date(data$date))
library(lubridate)
data['type_of_day'] <- wday(as.Date(data$date))
View(newDataNA)
View(data)
View(data)
library(lubridate)
data['type_of_day'] <- wday(as.Date(data$date))
data['type_of_daya'] <- weekdays(as.Date(data$date))
View(data)
View(data)
View(data)
View(data)
options(max.print=5000)
View(data)
# load
if(!(file.exists("activity.csv") { unzip("activity.zip")  }
dataNA<-read.csv("activity.csv")
data<-na.omit(dataNA)
#1
dataByDate<-aggregate(steps ~ date, data, sum)
hist(dataByDate$steps)
summary(dataByDate)
#2
dataByInterval<-aggregate(steps ~ interval, data, mean)
plot(dataByInterval$interval, dataByInterval$steps, type="l")
dataByInterval$interval[dataByInterval$steps==max(dataByInterval$steps)]
#3 filling the gap
sum(is.na(dataNA))
newDataNA<-dataNA
x<-0
#replacing
for (i in 1:nrow(dataNA)){
if (is.na(dataNA$steps[i])){
newDataNA$steps[i]<-round(dataByInterval$steps[dataByInterval$interval==dataNA$interval[i]],0)
}
}
dataByDate<-aggregate(steps ~ date, newDataNA, sum)
hist(dataByDate$steps)
summary(dataByDate)
data<-newDataNA
options(max.print=5000)
library(lubridate)
data['type_of_day'] <- wday(as.Date(data$date))
data['type_of_daya'] <- weekdays(as.Date(data$date))
View(data)
View(dataByDate)
View(newDataNA)
View(dataNA)
utils::View(stata)
dataNA[1000:1500]
dataNA[1000:1500,]
View(data)
View(data)
data[1000:1500,]
data[1500:2500,]
library(lubridate)
data['weekday'] <- wday(as.Date(data$date))-1
View(data)
# load
if(!(file.exists("activity.csv") { unzip("activity.zip")  }
dataNA<-read.csv("activity.csv")
data<-na.omit(dataNA)
#1
dataByDate<-aggregate(steps ~ date, data, sum)
hist(dataByDate$steps)
summary(dataByDate)
#2
dataByInterval<-aggregate(steps ~ interval, data, mean)
plot(dataByInterval$interval, dataByInterval$steps, type="l")
dataByInterval$interval[dataByInterval$steps==max(dataByInterval$steps)]
#3 filling the gap
sum(is.na(dataNA))
newDataNA<-dataNA
x<-0
#replacing
for (i in 1:nrow(dataNA)){
if (is.na(dataNA$steps[i])){
newDataNA$steps[i]<-round(dataByInterval$steps[dataByInterval$interval==dataNA$interval[i]],0)
}
}
dataByDate<-aggregate(steps ~ date, newDataNA, sum)
hist(dataByDate$steps)
summary(dataByDate)
data<-newDataNA
library(lubridate)
data['weekday'] <- wday(as.Date(data$date))-1
View(data)
# load
if(!(file.exists("activity.csv") { unzip("activity.zip")  }
dataNA<-read.csv("activity.csv")
data<-na.omit(dataNA)
#1
dataByDate<-aggregate(steps ~ date, data, sum)
hist(dataByDate$steps)
summary(dataByDate)
#2
dataByInterval<-aggregate(steps ~ interval, data, mean)
plot(dataByInterval$interval, dataByInterval$steps, type="l")
dataByInterval$interval[dataByInterval$steps==max(dataByInterval$steps)]
#3 filling the gap
sum(is.na(dataNA))
newDataNA<-dataNA
x<-0
#replacing
for (i in 1:nrow(dataNA)){
if (is.na(dataNA$steps[i])){
newDataNA$steps[i]<-round(dataByInterval$steps[dataByInterval$interval==dataNA$interval[i]],0)
}
}
dataByDate<-aggregate(steps ~ date, newDataNA, sum)
hist(dataByDate$steps)
summary(dataByDate)
data<-newDataNA
options(max.print=5000)
library(lubridate)
data['weekday'] <- wday(as.Date(data$date))-1
data['type_of_daya'] <- weekdays(as.Date(data$date))
View(data)
data$weekday <- wday(as.Date(data$date))-1
data$weektype[data$weekday<6]<-"weekday"
View(data)
data[1500:2500,]
# load
if(!(file.exists("activity.csv") { unzip("activity.zip")  }
dataNA<-read.csv("activity.csv")
data<-na.omit(dataNA)
#1
dataByDate<-aggregate(steps ~ date, data, sum)
hist(dataByDate$steps)
summary(dataByDate)
#2
dataByInterval<-aggregate(steps ~ interval, data, mean)
plot(dataByInterval$interval, dataByInterval$steps, type="l")
dataByInterval$interval[dataByInterval$steps==max(dataByInterval$steps)]
#3 filling the gap
sum(is.na(dataNA))
newDataNA<-dataNA
x<-0
#replacing
for (i in 1:nrow(dataNA)){
if (is.na(dataNA$steps[i])){
newDataNA$steps[i]<-round(dataByInterval$steps[dataByInterval$interval==dataNA$interval[i]],0)
}
}
dataByDate<-aggregate(steps ~ date, newDataNA, sum)
hist(dataByDate$steps)
summary(dataByDate)
data<-newDataNA
options(max.print=5000)
library(lubridate)
data$weekday <- wday(as.Date(data$date))-1
data$weektype[data$weekday<6]<-"weekday"
data$weektype[data$weekday>5]<-"weekend"
View(data)
dataByWeektype <- aggregate(steps ~ interval + weektype, data, mean)
# creat a plot
qplot(interval,
steps,
data = df_imputed_steps_by_interval,
type = 'l',
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ type_of_day, ncol = 1)
library(ggplot2)
qplot(interval,
steps,
data = df_imputed_steps_by_interval,
type = 'l',
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ type_of_day, ncol = 1)
# creat a plot
library(ggplot2)
qplot(interval,
steps,
data = data,
type = 'l',
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ weektype, ncol = 1)
dataByWeektype <- aggregate(steps ~ interval + weektype, data, mean)
# creat a plot
library(ggplot2)
qplot(interval,
steps,
data = data,
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ weektype, ncol = 1)
dataByWeektype <- aggregate(steps ~ interval + weektype, data, mean)
# creat a plot
library(ggplot2)
qplot(interval,
steps,
data = data,
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ weektype, ncol = 1)
# load
if(!(file.exists("activity.csv") { unzip("activity.zip")  }
dataNA<-read.csv("activity.csv")
data<-na.omit(dataNA)
#1
dataByDate<-aggregate(steps ~ date, data, sum)
hist(dataByDate$steps)
summary(dataByDate)
#2
dataByInterval<-aggregate(steps ~ interval, data, mean)
plot(dataByInterval$interval, dataByInterval$steps, type="l")
dataByInterval$interval[dataByInterval$steps==max(dataByInterval$steps)]
#3 filling the gap
sum(is.na(dataNA))
newDataNA<-dataNA
x<-0
#replacing
for (i in 1:nrow(dataNA)){
if (is.na(dataNA$steps[i])){
newDataNA$steps[i]<-round(dataByInterval$steps[dataByInterval$interval==dataNA$interval[i]],0)
}
}
dataByDate<-aggregate(steps ~ date, newDataNA, sum)
hist(dataByDate$steps)
summary(dataByDate)
#4
data<-newDataNA
options(max.print=5000)
library(lubridate)
data$weekday <- wday(as.Date(data$date))-1
data$weektype[data$weekday<6]<-"weekday"
data$weektype[data$weekday>5]<-"weekend"
dataByWeektype <- aggregate(steps ~ interval + weektype, data, mean)
# creat a plot
library(ggplot2)
qplot(interval,
steps,
data = data,
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ weektype, ncol = 1)
# load
if(!(file.exists("activity.csv") { unzip("activity.zip")  }
dataNA<-read.csv("activity.csv")
data<-na.omit(dataNA)
#1
dataByDate<-aggregate(steps ~ date, data, sum)
hist(dataByDate$steps)
summary(dataByDate)
#2
dataByInterval<-aggregate(steps ~ interval, data, mean)
plot(dataByInterval$interval, dataByInterval$steps, type="l")
dataByInterval$interval[dataByInterval$steps==max(dataByInterval$steps)]
#3 filling the gap
sum(is.na(dataNA))
newDataNA<-dataNA
x<-0
#replacing
for (i in 1:nrow(dataNA)){
if (is.na(dataNA$steps[i])){
newDataNA$steps[i]<-round(dataByInterval$steps[dataByInterval$interval==dataNA$interval[i]],0)
}
}
dataByDate<-aggregate(steps ~ date, newDataNA, sum)
hist(dataByDate$steps)
summary(dataByDate)
#4
data<-newDataNA
library(lubridate)
data$weekday <- wday(as.Date(data$date))-1
data$weektype[data$weekday<6]<-"weekday"
data$weektype[data$weekday>5]<-"weekend"
dataByWeektype <- aggregate(steps ~ interval + weektype, data, mean)
# creat a plot
library(ggplot2)
qplot(interval,
steps,
data = data,
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ weektype, ncol = 1)
qplot(interval,
steps,
data = data,
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "")
library(ggplot2)
qplot(interval,
steps,
data = data,
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ weektype, ncol = 1)
View(data)
library(ggplot2)
qplot(interval,
steps,
data = dataByWeektype,
geom=c("line"),
xlab = "Interval",
ylab = "Number of steps",
main = "") +
facet_wrap(~ weektype, ncol = 1)
setwd("~/Documents/R/RepData_PeerAssessment1v!")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
unzip("activity.zip")
dataNA<-read.csv("activity.csv")
data<-na.omit(dataNA)
dataByDate<-aggregate(steps ~ date, data, sum)
hist(dataByDate$steps)
```
## What is mean total number of steps taken per day?
```{r}
summary(dataByDate)
```
## What is the average daily activity pattern?
```{r}
dataByInterval<-aggregate(steps ~ interval, data, mean)
plot(dataByInterval$interval, dataByInterval$steps, type="l")
dataByInterval$interval[dataByInterval$steps==max(dataByInterval$steps)]
```
## Imputing missing values
```{r}
sum(is.na(dataNA))
newDataNA<-dataNA
x<-0
for (i in 1:nrow(dataNA)){
if (is.na(dataNA$steps[i])){
newDataNA$steps[i]<-round(dataByInterval$steps[dataByInterval$interval==dataNA$interval[i]],0)
}
}
dataByDate<-aggregate(steps ~ date, newDataNA, sum)
hist(dataByDate$steps)
summary(dataByDate)
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
data<-newDataNA
library(lubridate)
data$weekday <- wday(as.Date(data$date))-1
data$weektype[data$weekday<6]<-"weekday"
data$weektype[data$weekday>5]<-"weekend"
dataByWeektype <- aggregate(steps ~ interval + weektype, data, mean)
library(ggplot2)
qplot(interval,
steps,
data = dataByWeektype,
geom=c("line"),
xlab = "interval",
ylab = "# steps",
main = "") +
facet_wrap(~ weektype, ncol = 1)
```
knit2html("PA1_template.Rmd")
if (interactive()) browseURL("test.html")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
unzip("activity.zip")
dataNA<-read.csv("activity.csv")
data<-na.omit(dataNA)
dataByDate<-aggregate(steps ~ date, data, sum)
hist(dataByDate$steps)
```
## What is mean total number of steps taken per day?
```{r}
summary(dataByDate)
```
## What is the average daily activity pattern?
```{r}
dataByInterval<-aggregate(steps ~ interval, data, mean)
plot(dataByInterval$interval, dataByInterval$steps, type="l")
dataByInterval$interval[dataByInterval$steps==max(dataByInterval$steps)]
```
## Imputing missing values
```{r}
sum(is.na(dataNA))
newDataNA<-dataNA
x<-0
for (i in 1:nrow(dataNA)){
if (is.na(dataNA$steps[i])){
newDataNA$steps[i]<-round(dataByInterval$steps[dataByInterval$interval==dataNA$interval[i]],0)
}
}
dataByDate<-aggregate(steps ~ date, newDataNA, sum)
hist(dataByDate$steps)
summary(dataByDate)
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
data<-newDataNA
library(lubridate)
data$weekday <- wday(as.Date(data$date))-1
data$weektype[data$weekday<6]<-"weekday"
data$weektype[data$weekday>5]<-"weekend"
dataByWeektype <- aggregate(steps ~ interval + weektype, data, mean)
library(ggplot2)
qplot(interval,
steps,
data = dataByWeektype,
geom=c("line"),
xlab = "interval",
ylab = "# steps",
main = "") +
facet_wrap(~ weektype, ncol = 1)
```
library(knitter)
knit2html("PA1_template.Rmd")
if (interactive()) browseURL("test.html")
source('~/.active-rstudio-document', echo=TRUE)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
unzip("activity.zip")
dataNA<-read.csv("activity.csv")
data<-na.omit(dataNA)
dataByDate<-aggregate(steps ~ date, data, sum)
hist(dataByDate$steps)
```
## What is mean total number of steps taken per day?
```{r}
summary(dataByDate)
```
## What is the average daily activity pattern?
```{r}
dataByInterval<-aggregate(steps ~ interval, data, mean)
plot(dataByInterval$interval, dataByInterval$steps, type="l")
dataByInterval$interval[dataByInterval$steps==max(dataByInterval$steps)]
```
## Imputing missing values
```{r}
sum(is.na(dataNA))
newDataNA<-dataNA
x<-0
for (i in 1:nrow(dataNA)){
if (is.na(dataNA$steps[i])){
newDataNA$steps[i]<-round(dataByInterval$steps[dataByInterval$interval==dataNA$interval[i]],0)
}
}
dataByDate<-aggregate(steps ~ date, newDataNA, sum)
hist(dataByDate$steps)
summary(dataByDate)
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
data<-newDataNA
library(lubridate)
data$weekday <- wday(as.Date(data$date))-1
data$weektype[data$weekday<6]<-"weekday"
data$weektype[data$weekday>5]<-"weekend"
dataByWeektype <- aggregate(steps ~ interval + weektype, data, mean)
library(ggplot2)
qplot(interval,
steps,
data = dataByWeektype,
geom=c("line"),
xlab = "interval",
ylab = "# steps",
main = "") +
facet_wrap(~ weektype, ncol = 1)
```
library(knitr)
knit2html("PA1_template.Rmd")
if (interactive()) browseURL("test.html")
